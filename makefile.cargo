ifneq ($(HOST), $(TARGET))
CXX ?= $(TARGET)-g++
AR ?= $(TARGET)-ar
else
CXX ?= g++
AR ?= ar
endif

ifneq ("$(MSYSTEM)", "")
OUT_DIR := $(shell cygpath "$(OUT_DIR)")
else
CXXFLAGS += -fPIC
endif

AZURE_CPP_SRC = \
    src/azure-c.cpp \
    libazure/Blur.cpp \
    libazure/convolver.cpp \
    libazure/DataSourceSurface.cpp \
    libazure/DataSurfaceHelpers.cpp \
    libazure/DrawEventRecorder.cpp \
    libazure/DrawTargetCapture.cpp \
    libazure/DrawTarget.cpp \
    libazure/DrawTargetDual.cpp \
    libazure/DrawTargetRecording.cpp \
    libazure/DrawTargetSkia.cpp \
    libazure/DrawTargetTiled.cpp \
    libazure/Factory.cpp \
    libazure/FilterNodeSoftware.cpp \
    libazure/FilterProcessing.cpp \
    libazure/FilterProcessingScalar.cpp \
    libazure/ImageScaling.cpp \
    libazure/Matrix.cpp \
    libazure/Path.cpp \
    libazure/PathHelpers.cpp \
    libazure/PathRecording.cpp \
    libazure/PathSkia.cpp \
    libazure/RecordedEvent.cpp \
    libazure/ScaledFontBase.cpp \
    libazure/ScaledFontSkia.cpp \
    libazure/SourceSurfaceRawData.cpp \
    libazure/SourceSurfaceSkia.cpp

CXXFLAGS += \
    -std=gnu++11 \
    -Ilibazure \
    -DMOZ_WARN_UNUSED_RESULT = "" \
    $(NULL)

ifeq ($(CFG_ENABLE_DEBUG_SKIA), 1)
CXXFLAGS += \
    -g \
    -DSK_DEBUG \
    -DGR_DEBUG=1 \
    -DGR_GL_LOG_CALLS=1 \
    -DGR_GL_LOG_CALLS_START=1 \
    $(NULL)
else
CXXFLAGS += \
    -O3 \
    -DSK_RELEASE \
    -DGR_RELEASE=1 \
    $(NULL)
endif

CXXFLAGS += \
    -iquote "$(DEP_SKIA_OUTDIR)/include" \
    -iquote "$(DEP_SKIA_OUTDIR)/include/core" \
    -iquote "$(DEP_SKIA_OUTDIR)/include/config" \
    -iquote "$(DEP_SKIA_OUTDIR)/include/effects" \
    -iquote "$(DEP_SKIA_OUTDIR)/include/ports" \
    -iquote "$(DEP_SKIA_OUTDIR)/include/utils" \
    -iquote "$(DEP_SKIA_OUTDIR)/include/gpu" \
    -iquote "$(DEP_SKIA_OUTDIR)/include/gpu/gl" \
    -DUSE_SKIA \
    -DUSE_SKIA_GPU

ifdef DEP_FREETYPE_OUTDIR
    CXXFLAGS += "-I$(DEP_FREETYPE_OUTDIR)/include"
else
    CXXFLAGS += `pkg-config --cflags freetype2`
endif

USE_CLANG = $(shell $(CXX) --version|grep -c 'clang')

ifeq (i686, $(findstring i686, $(TARGET)))
    supports_sse = true
endif
ifeq (x86_64, $(findstring x86_64, $(TARGET)))
    supports_sse = true
endif
ifeq (true, $(supports_sse))
AZURE_CPP_SRC += \
    libazure/BlurSSE2.cpp \
    libazure/FilterProcessingSSE2.cpp \
    libazure/ImageScalingSSE2.cpp \
    libazure/convolverSSE2.cpp

CXXFLAGS += \
    -msse2 \
    -DUSE_SSE2
endif

ifeq (darwin, $(findstring darwin, $(TARGET)))
CXXFLAGS += \
    -DXP_MACOSX \
    -DXP_UNIX \
    -Dtypeof=__typeof__

AZURE_CPP_SRC += \
    libazure/DrawTargetCG.cpp \
    libazure/MacIOSurface.cpp \
    libazure/PathCG.cpp \
    libazure/ScaledFontMac.cpp \
    libazure/SourceSurfaceCG.cpp
endif

ifeq ("$(MSYSTEM)", "MINGW64")
CXXFLAGS += \
    -DXP_WIN \
    -DMOZ_ENABLE_FREETYPE \
    -D_WIN32_WINNT=0x0600 \
    -DSK_BUILD_FOR_WIN32 \
    -I/mingw64/include/freetype2 \
    $(NULL)

AZURE_CPP_SRC += \
    libazure/DrawTargetD2D.cpp \
    libazure/SourceSurfaceD2D.cpp \
    libazure/SourceSurfaceD2DTarget.cpp \
    libazure/ScaledFontWin.cpp \
    libazure/ScaledFontDWrite.cpp \
    libazure/PathD2D.cpp \
    $(NULL)
endif

ifeq (linux, $(findstring linux, $(TARGET)))
CXXFLAGS += \
    -DMOZ_ENABLE_FREETYPE \
    -DXP_UNIX \
    -DSK_BUILD_FOR_UNIX
endif

ifeq (androideabi, $(findstring androideabi, $(TARGET)))
CXXFLAGS += \
    -DXP_UNIX \
    -DSK_BUILD_FOR_ANDROID

CXXFLAGS += \
    -DMOZ_ENABLE_FREETYPE
endif

ALL_CPP_SRC = $(AZURE_CPP_SRC)
ALL_OBJS = $(ALL_CPP_SRC:%.cpp=$(OUT_DIR)/%.o)

.PHONY: all
all: $(OUT_DIR)/libazure.a

THIS_MAKEFILE := $(CURDIR)/$(word $(words $(MAKEFILE_LIST)), $(MAKEFILE_LIST))

$(OUT_DIR)/%.o: %.cpp $(THIS_MAKEFILE)
    mkdir -p `dirname $@` && $(CXX) $< -o $@ -c $(CXXFLAGS)

$(OUT_DIR)/libazure.a: $(ALL_OBJS)
    $(AR) rcs $@ $(ALL_OBJS)
